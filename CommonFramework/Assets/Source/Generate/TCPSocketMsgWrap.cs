//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class TCPSocketMsgWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(TCPSocketMsg), typeof(MsgBase));
		L.RegFunction("ChangerMsg", ChangerMsg);
		L.RegFunction("ChangeLuaMsg", ChangeLuaMsg);
		L.RegFunction("New", _CreateTCPSocketMsg);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("netMsg", get_netMsg, set_netMsg);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateTCPSocketMsg(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				TCPSocketMsg obj = new TCPSocketMsg();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<ushort, NetMsgBase>(L, 1))
			{
				ushort arg0 = (ushort)LuaDLL.lua_tonumber(L, 1);
				NetMsgBase arg1 = (NetMsgBase)ToLua.ToObject(L, 2);
				TCPSocketMsg obj = new TCPSocketMsg(arg0, arg1);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: TCPSocketMsg.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ChangerMsg(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			TCPSocketMsg obj = (TCPSocketMsg)ToLua.CheckObject<TCPSocketMsg>(L, 1);
			ushort arg0 = (ushort)LuaDLL.luaL_checknumber(L, 2);
			NetMsgBase arg1 = (NetMsgBase)ToLua.CheckObject<NetMsgBase>(L, 3);
			obj.ChangerMsg(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ChangeLuaMsg(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			TCPSocketMsg obj = (TCPSocketMsg)ToLua.CheckObject<TCPSocketMsg>(L, 1);
			ushort arg0 = (ushort)LuaDLL.luaL_checknumber(L, 2);
			LuaByteBuffer arg1 = new LuaByteBuffer(ToLua.CheckByteBuffer(L, 3));
			ushort arg2 = (ushort)LuaDLL.luaL_checknumber(L, 4);
			obj.ChangeLuaMsg(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_netMsg(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TCPSocketMsg obj = (TCPSocketMsg)o;
			NetMsgBase ret = obj.netMsg;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index netMsg on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_netMsg(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			TCPSocketMsg obj = (TCPSocketMsg)o;
			NetMsgBase arg0 = (NetMsgBase)ToLua.CheckObject<NetMsgBase>(L, 2);
			obj.netMsg = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index netMsg on a nil value" : e.Message);
		}
	}
}

